// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/v1/transfer.proto

package transferv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetFileSizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileSizeRequest) Reset() {
	*x = GetFileSizeRequest{}
	mi := &file_proto_v1_transfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileSizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileSizeRequest) ProtoMessage() {}

func (x *GetFileSizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_transfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileSizeRequest.ProtoReflect.Descriptor instead.
func (*GetFileSizeRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *GetFileSizeRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

type GetFileSizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Size          int64                  `protobuf:"varint,1,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileSizeResponse) Reset() {
	*x = GetFileSizeResponse{}
	mi := &file_proto_v1_transfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileSizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileSizeResponse) ProtoMessage() {}

func (x *GetFileSizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_transfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileSizeResponse.ProtoReflect.Descriptor instead.
func (*GetFileSizeResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *GetFileSizeResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type StreamFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Start         int64                  `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	ChunkSize     int64                  `protobuf:"varint,3,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	CanDecompress bool                   `protobuf:"varint,4,opt,name=can_decompress,json=canDecompress,proto3" json:"can_decompress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamFileRequest) Reset() {
	*x = StreamFileRequest{}
	mi := &file_proto_v1_transfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFileRequest) ProtoMessage() {}

func (x *StreamFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_transfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFileRequest.ProtoReflect.Descriptor instead.
func (*StreamFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_transfer_proto_rawDescGZIP(), []int{2}
}

func (x *StreamFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *StreamFileRequest) GetStart() int64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *StreamFileRequest) GetChunkSize() int64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *StreamFileRequest) GetCanDecompress() bool {
	if x != nil {
		return x.CanDecompress
	}
	return false
}

type StreamFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunk         []byte                 `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Compressed    bool                   `protobuf:"varint,2,opt,name=compressed,proto3" json:"compressed,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamFileResponse) Reset() {
	*x = StreamFileResponse{}
	mi := &file_proto_v1_transfer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFileResponse) ProtoMessage() {}

func (x *StreamFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_transfer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFileResponse.ProtoReflect.Descriptor instead.
func (*StreamFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *StreamFileResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *StreamFileResponse) GetCompressed() bool {
	if x != nil {
		return x.Compressed
	}
	return false
}

func (x *StreamFileResponse) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	Offset        int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Compressed    bool                   `protobuf:"varint,4,opt,name=compressed,proto3" json:"compressed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_proto_v1_transfer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_transfer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_transfer_proto_rawDescGZIP(), []int{4}
}

func (x *UploadFileRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

func (x *UploadFileRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *UploadFileRequest) GetCompressed() bool {
	if x != nil {
		return x.Compressed
	}
	return false
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileName      string                 `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	BytesReceived int64                  `protobuf:"varint,2,opt,name=bytes_received,json=bytesReceived,proto3" json:"bytes_received,omitempty"` // server can send periodic progress updates
	Success       bool                   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_proto_v1_transfer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_transfer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_transfer_proto_rawDescGZIP(), []int{5}
}

func (x *UploadFileResponse) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileResponse) GetBytesReceived() int64 {
	if x != nil {
		return x.BytesReceived
	}
	return 0
}

func (x *UploadFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadFileResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_proto_v1_transfer_proto protoreflect.FileDescriptor

const file_proto_v1_transfer_proto_rawDesc = "" +
	"\n" +
	"\x17proto/v1/transfer.proto\x12\vtransfer.v1\"1\n" +
	"\x12GetFileSizeRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\")\n" +
	"\x13GetFileSizeResponse\x12\x12\n" +
	"\x04size\x18\x01 \x01(\x03R\x04size\"\x8c\x01\n" +
	"\x11StreamFileRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x14\n" +
	"\x05start\x18\x02 \x01(\x03R\x05start\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x03 \x01(\x03R\tchunkSize\x12%\n" +
	"\x0ecan_decompress\x18\x04 \x01(\bR\rcanDecompress\"b\n" +
	"\x12StreamFileResponse\x12\x14\n" +
	"\x05chunk\x18\x01 \x01(\fR\x05chunk\x12\x1e\n" +
	"\n" +
	"compressed\x18\x02 \x01(\bR\n" +
	"compressed\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\"~\n" +
	"\x11UploadFileRequest\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\x03R\x06offset\x12\x1e\n" +
	"\n" +
	"compressed\x18\x04 \x01(\bR\n" +
	"compressed\"\x97\x01\n" +
	"\x12UploadFileResponse\x12\x1b\n" +
	"\tfile_name\x18\x01 \x01(\tR\bfileName\x12%\n" +
	"\x0ebytes_received\x18\x02 \x01(\x03R\rbytesReceived\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage2\x87\x02\n" +
	"\x0fTransferService\x12P\n" +
	"\vGetFileSize\x12\x1f.transfer.v1.GetFileSizeRequest\x1a .transfer.v1.GetFileSizeResponse\x12O\n" +
	"\n" +
	"StreamFile\x12\x1e.transfer.v1.StreamFileRequest\x1a\x1f.transfer.v1.StreamFileResponse0\x01\x12Q\n" +
	"\n" +
	"UploadFile\x12\x1e.transfer.v1.UploadFileRequest\x1a\x1f.transfer.v1.UploadFileResponse(\x010\x01B\xb2\x01\n" +
	"\x0fcom.transfer.v1B\rTransferProtoP\x01ZCgithub.com/gilwong00/file-streamer/internal/gen/proto/v1;transferv1\xa2\x02\x03TXX\xaa\x02\vTransfer.V1\xca\x02\vTransfer\\V1\xe2\x02\x17Transfer\\V1\\GPBMetadata\xea\x02\fTransfer::V1b\x06proto3"

var (
	file_proto_v1_transfer_proto_rawDescOnce sync.Once
	file_proto_v1_transfer_proto_rawDescData []byte
)

func file_proto_v1_transfer_proto_rawDescGZIP() []byte {
	file_proto_v1_transfer_proto_rawDescOnce.Do(func() {
		file_proto_v1_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_transfer_proto_rawDesc), len(file_proto_v1_transfer_proto_rawDesc)))
	})
	return file_proto_v1_transfer_proto_rawDescData
}

var file_proto_v1_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_v1_transfer_proto_goTypes = []any{
	(*GetFileSizeRequest)(nil),  // 0: transfer.v1.GetFileSizeRequest
	(*GetFileSizeResponse)(nil), // 1: transfer.v1.GetFileSizeResponse
	(*StreamFileRequest)(nil),   // 2: transfer.v1.StreamFileRequest
	(*StreamFileResponse)(nil),  // 3: transfer.v1.StreamFileResponse
	(*UploadFileRequest)(nil),   // 4: transfer.v1.UploadFileRequest
	(*UploadFileResponse)(nil),  // 5: transfer.v1.UploadFileResponse
}
var file_proto_v1_transfer_proto_depIdxs = []int32{
	0, // 0: transfer.v1.TransferService.GetFileSize:input_type -> transfer.v1.GetFileSizeRequest
	2, // 1: transfer.v1.TransferService.StreamFile:input_type -> transfer.v1.StreamFileRequest
	4, // 2: transfer.v1.TransferService.UploadFile:input_type -> transfer.v1.UploadFileRequest
	1, // 3: transfer.v1.TransferService.GetFileSize:output_type -> transfer.v1.GetFileSizeResponse
	3, // 4: transfer.v1.TransferService.StreamFile:output_type -> transfer.v1.StreamFileResponse
	5, // 5: transfer.v1.TransferService.UploadFile:output_type -> transfer.v1.UploadFileResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_v1_transfer_proto_init() }
func file_proto_v1_transfer_proto_init() {
	if File_proto_v1_transfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_transfer_proto_rawDesc), len(file_proto_v1_transfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_transfer_proto_goTypes,
		DependencyIndexes: file_proto_v1_transfer_proto_depIdxs,
		MessageInfos:      file_proto_v1_transfer_proto_msgTypes,
	}.Build()
	File_proto_v1_transfer_proto = out.File
	file_proto_v1_transfer_proto_goTypes = nil
	file_proto_v1_transfer_proto_depIdxs = nil
}
